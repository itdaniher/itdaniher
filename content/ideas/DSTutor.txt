1. lilypond.org
2. echonest
3. jfugue.org
4. csound
        Learning an instrument is a difficult proposition for many reasons; finding reasonable beginning points in your studies, a good teacher to coach you, and qualitative advice is not easy.  X approaches these problems by providing students with an interactive framework providing quantitative and qualitative advice from their phones, tablets, or computers.
X will (ideally)
1. Generate an ideal musical framework from sheet music scores
2. Transcribe audio files to generate sheet music
3. Record students, producing quantitative feedback related to
1. pitch
2. beat
3. tone/timbre
1. compare feedback to the ideal framework to highlight mistakes or areas of improvement
2. Provide group coordination tools?[a]
1. Duet, Orchestra, Garage Band...
2. geographically disperse?
3. http://www.webrtc.org/reference/native-apis


The music classroom of today closely resembles the music classroom of hundreds of years ago. Instruments might be cheaper and more plentiful, but the basics are the same. There's still a maestro, someone with mastery of the trade, individually conveying the nuances of the art to students and guiding group practices. Those desiring to reach exceptional competency have no choice but to shell out incredible sums of money for regular meetings with extremely skilled tutors, as of yet, the best method we have for providing individual feedback and progress assessment. Salman Kahn managed to solve this problem for your average wrote learning class - his series of video tutorials covers all aspects of highschool English, Science, and Math, but is woefully devoid of instructions in the arts. Art education is fundamentally an interactive and tangible exchange, not something that can be adequately distilled to a series of video tutorials, despite what YouTube might say to the contrary. 
DST, or the digital suzuki tutor, is an answer to these problems. It's the missing link, connecting the everpresent platform for etherealization, the smartphone, to the world of the arts. By leveraging techniques borrowed from cutting edge digital signal processing and by appropriate use of cloud computing, DST can provide a level of responsiveness and personalization unachievable before.


1. turn on
2. navigate to your app
3. resume(Piece), resume(Campaign) or select piece?
1. resume (Piece)
1. Displays Musical Score
1. percentile ranking of social users?
2. absolute performance metric compared to ideal performance?
3. relative to last time? / log scale?
4. relative to human ideal (Master Performance)?
1. display musical notation for the piece
2. accompaniments?
3. Highlights areas of interest
1. spots of difficulty
1. color coding
1. Shows individual metrics, and latest increases or decreases in performance
1. Bundled Score?
1. Actions:
1. jump along - scroll in tune to wherever you pick up playing
2. Zoom on areas of interest
1. standard multitouch interfaces for two finger zoom / pan
1. Select Area for individual focus
2. replay a selected area until you get it “right”?
1. resume (Campaign)
1. shows roadmap of piece done and pieces till level up 
1. Steam Profile model (Achievements?)
1. display quantitative cumulative score to date
1. select piece
1. display content library
1. icons - some visual identifier for the piece
2. Content Meta-Information:[b]
1. composer name / date 
2. composer bio
3. who’s performed this piece and links to their renditions?
4. Genre (Pop, Baroque, Gregorian, etc..)
5. Style
1. speed, dominate tones, volume, etc...
1. piece name
2. context of piece in performance (act in opera)
3. Relative Difficulty
4. Rating (amongst similar people? netflix?)
5. Cost (non-public domain works)
1. middle ground between “play when you’re ready!” and “3.2.1.go...”
1. cursor follows along?
2. listens to where you are, centers that piece of music on the frame, scrolls lines as you advance?
3. highlights mistakes
1. off pitch notes turn red? (depending on intensity of mistake, brighter?)
2. off beat notes highlight space between notes red? (again, color depends on intensity?)
3. poor tone or timbre indication? (technical problems in both how to identify and convey)
1. audio metronome?
1. at piece end, think for less than thirty seconds
2. offer playback with annotations 
1. hints for improvement vary by instrument (crowd-sourced? karma for helping?)
1. upload your piece to the cloud for others to listen to?
1. “turn in” your piece to a human teacher?
2. mechanism for flipping the music classroom?
3. marketplace for tutors?
----
Alpha proof of concept:
Audio metronome - beat correct to ?ms[c]
Record incoming audio (pitch, beat, tone/timbre correct[d]) to the best ability of the system microphone[e](s) and cancelling the the metronome beat
Echo cancellation and ambient noise filtering[f]
Compress recorded audio to minimum sized required to analyze accuracy (pitch, beat, tone/timbre) remotely [reduce network traffic]
Send compressed audio to cloud service 
Post process compressed audio - compare to theoretical sheet music perfection[g] - 
Create and copyright a legible and accurate sheet music notation for written feedback
Ship annotated sheet music back to client device
Display annotated sheet music to subscriber


Questions to answer:
Standard notation for sheet music performance analysis?Echonest


----
Alpha+ POC:
Take high quality recording (Master Musician such as Yo Yo Ma) and analyze for tone/timbre
Compare Master tone/timbre of master to student


Samsung targets
http://www.samsung.com/us/mobile/wi-fi-tabs : 7 plus, 8.9 and 10.1
Galaxy S II phones: ATT, Sprint, Verison, US Cellular 




------


Javascript implementation thoughts:
1. vexflow
1. notation drawing
2. canvas
3. http://0xfe.blogspot.com/2011/03/music-theory-api.html
1. nestjs
1. audio processing via echonest
1. audiolet
1. https://github.com/oampo/Audiolet/wiki/Playing-A-Melody
2. sample-precise scheduler for subms accuracy
3. specify pitch and duration
4. alternatively: http://www.gregjopa.com/2011/05/calculate-note-frequencies-in-javascript-with-music-js/
1. http://code.google.com/p/chromium/issues/detail?id=112367&
2. 3. MusicXML
1. http://www.gutenberg.org/browse/categories/4
2. [a]Samuel Teich:
Elaborate
[b]Ian Daniher:
chose a campaign vs. adjusting representation of the metadata?
[c]Ian Daniher:
use system level audio playback
[d]Samuel Teich:
Probably really hard... might need to be left out of alpha
________________
Ian Daniher:
http://docs.echonest.com.s3-website-us-east-1.amazonaws.com/_static/AnalyzeDocumentation.pdf
________________
Ian Daniher:
even needed for suzuki?
[e]Ian Daniher:
http://www.faberacoustical.com/wpblog/wp-content/uploads/2010/06/iPhone-4-Mic-Response.png
[f]Ian Daniher:
already baked into iOS audio grab API?
________________
Ian Daniher:
RTC toolkit for web?
________________
Ian Daniher:
https://github.com/AvinashP/VoiceRecorder
[g]Samuel Teich:
Echo nest Licensing... How Does it work?